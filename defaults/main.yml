---
nexus_version: '3.2.0-01'
nexus_package: "nexus-{{ nexus_version }}-unix.tar.gz"
nexus_download_dir: '/tmp'
nexus_os_group: 'nexus'
nexus_os_user: 'nexus'
nexus_installation_dir: '/opt'
nexus_data_dir: '/var/nexus'
nexus_timezone: 'UTC' # java timezone
nexus_tmp_dir: '/tmp/nexus'

# Customization can be done via setting environment variables that the 'nexus'
# command will use, e.g. INSTALL4J_ADD_VM_PARAMS
nexus_service_environment: ''

nexus_admin_password: 'changeme' # Note : admin password change subsequent to first-time install is *not implemented* yet
nexus_anonymous_access: false

public_hostname: 'nexus.vm'

# HTML snippets to be included in branding header and footer.
# Use '$baseUrl' to insert the base URL of the server (e.g. to reference an image)
nexus_branding_header: ""
nexus_branding_footer: "Last provisionned {{ ansible_date_time.iso8601 }}"

# To use an http proxy, bind to 127.0.0.1
nexus_bind_address: 0.0.0.0

ldap_connections: []
# ldap_connections:
#    - name: 'My Company LDAP' # used as a key to update the ldap config
#      protocol: 'ldaps' # ldap or ldaps
#      hostname: 'ldap.mycompany.com'
#      port: 636
#      search_base: 'dc=mycompany,dc=net'
#      user_base_dn: 'ou=users'
#      user_object_class: 'inetOrgPerson'
#      user_id_attribute: 'uid'
#      user_real_name_attribute: 'cn'
#      user_email_attribute: 'mail'
#      group_base_dn: 'ou=groups'
#      group_object_class: 'posixGroup'
#      group_id_attribute: 'cn'
#      group_member_attribute: 'memberUid'
#      group_member_format: '${username}'

_ldap_connection_defaults:
  protocol: ldaps
  host: ''
  port: 636
  search_base: ''
  auth_scheme: ldaps
  auth_realm: ''
  auth_username: ''
  auth_password: ''

  connection_timeout: 30
  connection_retry_delay: 300
  max_incidents_count: 3

  user_base_dn: ''
  user_subtree: false
  user_object_class: ''
  user_ldap_filter: ''
  user_id_attribute: ''
  user_real_name_attribute: ''
  user_password_attribute: ''

  ldap_groups_as_roles: false

  # 'static' or 'dynamic'
  group_type: static

  # group_type: static
  group_base_dn: ''
  group_subtree: false
  group_object_class: '' 
  group_id_attribute: ''
  group_member_attribute: ''
  group_member_format: ''

  # group_type: dynamic
  user_member_of_attribute: ''

# also see _nexus_privilege_defaults below
nexus_privileges:
  - name: all-repos-read # used as key to update a privilege
    description: 'Read & Browse access to all repos'
    repository: '*'
    actions:
      - read
      - browse

nexus_roles:
  - id: Developpers # can map to a LDAP group id, also used as a key to update a role
    name: developers
    description: All developers
    privileges:
      - nx-search-read
      - all-repos-read
    roles: []

nexus_local_users: []
# nexus_local_users:
#   - username: jenkins # used as key to update
#     first_name: Jenkins
#     last_name: CI
#     email: support@company.com
#     password: "s3cr3t"
#     roles:
#       - developers

nexus_delete_default_repos: false
nexus_delete_default_blobstore: false

nexus_blobstores: []
# nexus_blobstores:
#   - name: separate-storage
#     path: /mnt/custom/path

nexus_repos_docker_proxy: []
# nexus_repos_docker_proxy:
#   - name: central
#     remote_url: 'https://repo1.maven.org/maven2/'
#     layout_policy: permissive
#   - name: jboss
#     remote_url: 'https://repository.jboss.org/nexus/content/groups/public-jboss/'

nexus_repos_docker_hosted: []
# nexus_repos_docker_hosted:
#   - name: production-docker
#     v1_enabled: false
#     write_policy: allow_once

nexus_repos_docker_group: []
# nexus_repos_docker_group:
#   - name: public
#     member_repos:
#       - central
#       - jboss
#

# also see _nexus_repos_maven_defaults below
nexus_repos_maven_proxy: []
# nexus_repos_maven_proxy:
#   - name: central
#     remote_url: 'https://repo1.maven.org/maven2/'
#     layout_policy: permissive
#   - name: jboss
#     remote_url: 'https://repository.jboss.org/nexus/content/groups/public-jboss/'
#   - name: secret-remote-repo
#     remote_url: 'https://company.com/repo/secure/private/go/away'
#     remote_username: 'username'
#     remote_password: 'secret'

nexus_repos_maven_hosted: []
# nexus_repos_maven_hosted:
#   - name: private-release
#     version_policy: release
#     write_policy: allow_once
#
nexus_repos_maven_group: []
# nexus_repos_maven_group:
#   - name: public
#     member_repos:
#       - central
#       - jboss
#
nexus_scheduled_tasks: []
# nexus_scheduled_tasks:
#   - name: compact-blobstore
#     cron: '0 0 22 * * ?'
#     typeId: blobstore.compact
#     taskProperties:
#       blobstoreName: 'default' # all task attributes are stored as strings by nexus internally

nexus_repos_rubygems_hosted: []
# nexus_repos_rubygems_proxy:
#   - name: rubygems-hosted
#     blob_store: default

nexus_repos_rubygems_group: []
# nexus_repos_rubygems_group:
#   - name: rubygems
#     blob_store: default
#     member_repos:
#       - rubygems-proxy
#       - rubygems-hosted

nexus_repos_rubygems_proxy: []
# nexus_repos_rubygems_proxy:
#   - name: rubygems-proxy
#     blob_store: default
#     remote_url: https://rubygems.org

nexus_repos_npm_hosted: []
nexus_repos_npm_group: []
nexus_repos_npm_proxy: []

_nexus_privilege_defaults:
  type: repository-view
  format: maven2
  actions:
    - read

_nexus_repos_rubygems_defaults:
  blob_store: default # Note : cannot be updated once the repo has been created
  strict_content_validation: true
  write_policy: allow_once # allow_once or allow

_nexus_repos_maven_defaults:
  blob_store: default # Note : cannot be updated once the repo has been created
  strict_content_validation: true
  version_policy: release # release, snapshot or mixed
  layout_policy: strict # strict or permissive
  write_policy: allow_once # allow_once or allow

_nexus_repos_docker_defaults:
  blob_store: default              # Note : cannot be updated once the repo has been created
  strict_content_validation: true
  v1_enabled: true                 # currently required for search to work
  write_policy: allow              # To overwrite :latest this is required (AFAIK)

_nexus_repos_npm_defaults:
  blob_store: default # Note : cannot be updated once the repo has been created
  strict_content_validation: true
  write_policy: allow_once # allow_once or allow
